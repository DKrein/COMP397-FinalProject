{"version":3,"sources":["managers/playerFireballCollision.ts"],"names":[],"mappings":"AAAA,IAAO,QAAQ,CAoDd;AApDD,WAAO,QAAQ,EAAC,CAAC;IAEb;QAII,iCAAY,cAAsC;YAC9C,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QAC1C,CAAC;QAEM,0CAAQ,GAAf,UAAgB,UAA0B,EAAE,QAAwB;YAChE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACxG,CAAC;QAEM,iDAAe,GAAtB,UAAuB,MAA0B;YAE7C,IAAI,UAAU,GAAmB,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;YACtD,IAAI,QAAQ,GAAmB,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;YACpD,IAAI,eAAe,GAAW,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,GAAG,CAAC;YAC/D,IAAI,eAAe,GAAW,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC;YACjD,IAAI,eAAe,GAAW,eAAe,GAAG,eAAe,CAAC;YAGhE,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACtC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YAEtC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC;YACvC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC;YAGvC;mEACuD;YACvD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC;gBACxD,gCAAgC;gBAChC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,cAAc,CAAC,CAAC,CAAC;oBACjC,MAAM,CAAC,KAAK,EAAE,CAAC;oBACf,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;oBAC7B,cAAc,CAAC,UAAU,EAAE,CAAC;gBAEhC,CAAC;gBAED,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,cAAc,CAAC,CAAC,CAAC;oBACjC,MAAM,CAAC,KAAK,EAAE,CAAC;oBACf,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;oBAC7B,cAAc,CAAC,UAAU,EAAE,CAAC;gBAEhC,CAAC;YAEL,CAAC,CAAA,2BAA2B;QAEhC,CAAC;QACL,8BAAC;IAAD,CAjDA,AAiDC,IAAA;IAjDY,gCAAuB,0BAiDnC,CAAA;AACL,CAAC,EApDM,QAAQ,KAAR,QAAQ,QAoDd","file":"managers/playerFireballCollision.js","sourcesContent":["module managers {\n\n    export class PlayerFireballCollision {\n        // PRIVATE INSTANCE VARIABLES\n        private _playerFireball: objects.PlayerFireball;\n\n        constructor(playerFireball: objects.PlayerFireball) {\n            this._playerFireball = playerFireball;\n        }\n\n        public distance(startPoint: createjs.Point, endPoint: createjs.Point): number {\n            return Math.sqrt(Math.pow((endPoint.x - startPoint.x), 2) + Math.pow(endPoint.y - startPoint.y, 2));\n        }\n\n        public CheckPlayerFire(object: objects.GameObject) {\n\n            var startPoint: createjs.Point = new createjs.Point();\n            var endPoint: createjs.Point = new createjs.Point();\n            var playerHalfWidth: number = this._playerFireball.width * 0.5;\n            var objectHalfWidth: number = object.width * 0.5;\n            var minimumDistance: number = playerHalfWidth + objectHalfWidth;\n\n\n            startPoint.x = this._playerFireball.x;\n            startPoint.y = this._playerFireball.y;\n\n            endPoint.x = object.centerX + object.x;\n            endPoint.y = object.centerY + object.y;\n\n\n            /* check if the distance between the player and \n              the other object is less than the minimum distance */\n            if (this.distance(startPoint, endPoint) < minimumDistance) {\n                //Check which object it collides\n                if (object.name === \"dragonEnemy1\") {\n                    object.reset();\n                    this._playerFireball.reset();\n                    gameController.ScoreValue++;\n                    //createjs.Sound.play(\"collect\");\n                }\n                \n                if (object.name === \"dragonEnemy2\") {\n                    object.reset();\n                    this._playerFireball.reset();\n                    gameController.ScoreValue++;\n                    //createjs.Sound.play(\"collect\");\n                }\n                \n            }//End MinimumDistance check\n            \n        }\n    }\n}"],"sourceRoot":"/source/"}